package com.aurionpro.jwtsecured.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;

import com.aurionpro.model.dto.CustomerDto;
import com.aurionpro.model.dto.PageResponse;
import com.aurionpro.model.dto.ViewCustomersDto;
import com.aurionpro.model.entity.Customer;
import com.aurionpro.model.exceptions.NotFoundException;

public class CustomerServiceImpl implements CustomerService{
	
	
	@Override
	public Customer getCustomerById(int customerId) {
		Optional<Customer> optionalCustomer = customerRepository.findById(customerId);
		if (!optionalCustomer.isPresent()) {
			throw new NotFoundException(customerId, "Customer not found with id : ");
		}
		return optionalCustomer.get();
	}

	@Override
	public PageResponse<ViewCustomersDto> getAllCustomers(int pageNo, int pageSize, String sortBy, String sortDir) {
		
		Sort sort = null;
		if(sortDir.equalsIgnoreCase("asc")) {
			sort = Sort.by(sortBy).ascending();
		}
		else {
			sort = Sort.by(sortBy).descending();
		}

		Pageable pageable = PageRequest.of(pageNo, pageSize, sort);
		Page<Customer> dbCustomerPage = customerRepository.findAll(pageable);

		PageResponse<ViewCustomersDto> viewCustomerDtoPageResponse = new PageResponse<>();
		viewCustomerDtoPageResponse.setTotalElements(pageSize);
		viewCustomerDtoPageResponse.setSize(dbCustomerPage.getSize());
		viewCustomerDtoPageResponse.setTotalElements(dbCustomerPage.getTotalElements());
//			Here it is not working so we use logic below
//			instructorPageResponse.setContent(instructorPage.getContent());
		viewCustomerDtoPageResponse.setLastPage(dbCustomerPage.isLast());

//			setContent logic
		List<ViewCustomersDto> viewCustomerDtos = new ArrayList<>();

		dbCustomerPage.getContent().forEach(customer -> {
			ViewCustomersDto viewCustomerDto = new ViewCustomersDto();
			viewCustomerDto.setCustomerId(customer.getCustomerId());
			viewCustomerDto.setFirstName(customer.getFirstName());
			viewCustomerDto.setLastName(customer.getLastName());
			viewCustomerDto.setAccountNumber(customer.getBankAccount().getAccountNumber());
			viewCustomerDto.setBalance(customer.getBankAccount().getBalance());

			viewCustomerDtos.add(viewCustomerDto);

		});
		viewCustomerDtoPageResponse.setContent(viewCustomerDtos);

		return viewCustomerDtoPageResponse;

	}

}
